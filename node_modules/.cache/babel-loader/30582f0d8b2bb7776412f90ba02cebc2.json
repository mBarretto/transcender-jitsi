{"ast":null,"code":"var _jsxFileName = \"/Users/daviribeiro/Desktop/projetos FDTE/projetos/transcender-jitsi/src/components/form/date/calendario.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button } from '../../button/button';\nconst dataInfo = {\n  nomesDias: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'],\n  numeroSemanas: [1, 2, 3, 4, 5],\n  numeroDiasSemana: [1, 2, 3, 4, 5, 6, 7],\n  nomesMeses: ['Janeiro', 'Fevereiro', 'MarÃ§o', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro']\n};\nexport function Calendario({\n  action,\n  value,\n  dataInicio,\n  dataFim\n}) {\n  var dataAtual = new Date();\n  const [dataState, setDataState] = useState({\n    dataFull: dataAtual,\n    ano: dataAtual.getFullYear(),\n    dia: dataAtual.getDate(),\n    mes: dataAtual.getMonth(),\n    diaSemana: dataAtual.getDay()\n  });\n  const [calendarioDias, setCalendarioDias] = useState( /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"carregando\")));\n  const [calendarioMesAno, setcalendarioMesAno] = useState(false);\n  useEffect(() => {\n    listarDias(dataState.mes, dataState.ano);\n  }, []);\n  dataAtual.setDate(1);\n  dataAtual.setDate(1 - dataAtual.getDay());\n\n  const mudarMes = tipo => {\n    let mesNovo = tipo === '<' ? dataState.mes - 1 : tipo === '>' ? dataState.mes + 1 : tipo;\n    let anoNovo = dataState.ano;\n\n    if (dataState.mes === 0 && tipo === '<') {\n      mesNovo = 11;\n      anoNovo = dataState.ano - 1;\n    } else if (dataState.mes === 11 && tipo === '>') {\n      mesNovo = 0;\n      anoNovo = dataState.ano + 1;\n    }\n\n    dataAtual.setFullYear(anoNovo, mesNovo, 1);\n    dataAtual.setDate(1 - dataAtual.getDay());\n    setDataState({ ...dataState,\n      mes: mesNovo,\n      ano: anoNovo,\n      dataFull: dataAtual\n    });\n    listarDias(mesNovo, anoNovo);\n  };\n\n  const mudarAno = tipo => {\n    let anoNovo = tipo === '<' ? dataState.ano - 1 : dataState.ano + 1;\n    dataAtual.setFullYear(anoNovo, dataState.mes, 1);\n    dataAtual.setDate(1 - dataAtual.getDay());\n    setDataState({ ...dataState,\n      ano: anoNovo,\n      dataFull: dataAtual\n    });\n    listarDias(dataState.mes, anoNovo);\n  };\n\n  const listarDias = (mesNovo, anoNovo) => {\n    setCalendarioDias(CalendarioDias(dataState, dataAtual, action, value, dataInicio, dataFim, mesNovo, anoNovo));\n  };\n\n  const mesesAction = s => {\n    setcalendarioMesAno(s);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box-calendario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, calendarioMesAno ? /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"default\",\n    type: \"btn circle\",\n    action: () => mudarAno('<'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, '<')), /*#__PURE__*/React.createElement(\"th\", {\n    colSpan: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, dataState.ano), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"default\",\n    type: \"btn circle\",\n    action: () => mudarAno('>'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, '>')))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"7\",\n    className: \"btn-meses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, dataInfo.nomesMeses.map((nM, i) => {\n    return /*#__PURE__*/React.createElement(Button, {\n      key: i,\n      color: \"secondary\",\n      type: \"btn\",\n      action: () => [mudarMes(i), mesesAction(false)],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 24\n      }\n    }, nM);\n  }))))) : /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"default\",\n    type: \"btn circle\",\n    action: () => mudarMes('<'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, '<')), /*#__PURE__*/React.createElement(\"th\", {\n    colSpan: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"default\",\n    type: \"btn circle\",\n    action: () => mesesAction(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, dataInfo.nomesMeses[dataState.mes] + ' de ' + dataState.ano)), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"default\",\n    type: \"btn circle\",\n    action: () => mudarMes('>'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, '>'))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, dataInfo.nomesDias.map((dia, i) => {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: `dia-semana-${dia}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 22\n      }\n    }, \" \", dia, \" \");\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, calendarioDias)));\n}\nexport const CalendarioDias = (dataState, dataAtual, action, value, dataInicio, dataFim, mesNovo) => {\n  var data = new Date();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dataInfo.numeroSemanas.map(s => {\n    const semanaDias = () => dataInfo.numeroDiasSemana.map(d => {\n      const diaAtual = dataAtual.getDate();\n      const mesAtual = dataAtual.getMonth(); //dataState.mes\n\n      dataAtual.setDate(diaAtual + 1);\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: `dia-${diaAtual}`,\n        className: diaAtual === data.getDate() && mesAtual === data.getMonth() ? 'dia-atual' : mesAtual === mesNovo ? 'mes-atual' : 'mes-aleatorio',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: dataInicio === `${diaAtual}/${mesAtual + 1}/${dataState.ano}` || dataFim === `${diaAtual}/${mesAtual + 1}/${dataState.ano}` || value === `${diaAtual}/${mesAtual + 1}/${dataState.ano}` ? 'primary' : 'default',\n        type: \"btn circle\",\n        action: () => action(`${diaAtual}/${mesAtual + 1}/${dataState.ano}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }\n      }, diaAtual));\n    });\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: `semana-${s}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 14\n      }\n    }, semanaDias());\n  }));\n};","map":{"version":3,"sources":["/Users/daviribeiro/Desktop/projetos FDTE/projetos/transcender-jitsi/src/components/form/date/calendario.js"],"names":["React","useEffect","useState","Button","dataInfo","nomesDias","numeroSemanas","numeroDiasSemana","nomesMeses","Calendario","action","value","dataInicio","dataFim","dataAtual","Date","dataState","setDataState","dataFull","ano","getFullYear","dia","getDate","mes","getMonth","diaSemana","getDay","calendarioDias","setCalendarioDias","calendarioMesAno","setcalendarioMesAno","listarDias","setDate","mudarMes","tipo","mesNovo","anoNovo","setFullYear","mudarAno","CalendarioDias","mesesAction","s","map","nM","i","data","semanaDias","d","diaAtual","mesAtual"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button } from '../../button/button'\r\n\r\nconst dataInfo = {\r\n    nomesDias:['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'],\r\n    numeroSemanas: [1, 2, 3, 4, 5],\r\n    numeroDiasSemana: [1, 2, 3, 4, 5, 6, 7],\r\n    nomesMeses:[\r\n      'Janeiro',\r\n      'Fevereiro',\r\n      'MarÃ§o',\r\n      'Abril',\r\n      'Maio',\r\n      'Junho',\r\n      'Julho',\r\n      'Agosto',\r\n      'Setembro',\r\n      'Outubro',\r\n      'Novembro',\r\n      'Dezembro'\r\n    ]\r\n}\r\n\r\nexport function Calendario({ action, value, dataInicio, dataFim }) {\r\n  var dataAtual = new Date()\r\n   const [dataState, setDataState] = useState(  {    \r\n    dataFull: dataAtual,\r\n    ano: dataAtual.getFullYear(),\r\n    dia: dataAtual.getDate(),\r\n    mes: dataAtual.getMonth(),\r\n    diaSemana: dataAtual.getDay()\r\n  })\r\n  const [calendarioDias, setCalendarioDias] = useState(  \r\n    <tr><td colSpan='7'>carregando</td></tr>\r\n  )  \r\n  const [calendarioMesAno, setcalendarioMesAno] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    listarDias(dataState.mes, dataState.ano)\r\n  },[])\r\n\r\n  dataAtual.setDate(1)\r\n  dataAtual.setDate(1 - dataAtual.getDay())\r\n\r\n  const mudarMes = (tipo) => {\r\n    let mesNovo = tipo === '<'? dataState.mes - 1 : tipo === '>' ? dataState.mes + 1 : tipo\r\n    let anoNovo = dataState.ano\r\n    if (dataState.mes === 0 &&  tipo === '<') {\r\n      mesNovo = 11\r\n      anoNovo = dataState.ano - 1\r\n    } else if (dataState.mes === 11 &&  tipo === '>') {\r\n      mesNovo = 0\r\n      anoNovo = dataState.ano + 1\r\n    }\r\n    \r\n    dataAtual.setFullYear(anoNovo, mesNovo, 1)\r\n    dataAtual.setDate( 1 - dataAtual.getDay() )\r\n\r\n    setDataState({ ...dataState, mes: mesNovo, ano: anoNovo, dataFull: dataAtual })\r\n    listarDias(mesNovo, anoNovo)\r\n  }\r\n\r\n  const mudarAno = (tipo) => {\r\n    let anoNovo = tipo === '<'? dataState.ano - 1 : dataState.ano + 1\r\n        \r\n    dataAtual.setFullYear(anoNovo, dataState.mes, 1)\r\n    dataAtual.setDate( 1 - dataAtual.getDay() )\r\n\r\n    setDataState({ ...dataState, ano: anoNovo, dataFull: dataAtual })\r\n    listarDias(dataState.mes, anoNovo)\r\n  }\r\n\r\n  const listarDias = (mesNovo, anoNovo) =>{\r\n    setCalendarioDias( CalendarioDias(dataState, dataAtual, action,value, dataInicio, dataFim, mesNovo, anoNovo) )\r\n  }\r\n\r\n  const mesesAction = (s) =>{\r\n    setcalendarioMesAno(s)\r\n  }\r\n\r\n  return (\r\n    <div className='box-calendario'>\r\n      {calendarioMesAno? <table>\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <Button color='default' type='btn circle' action={() => mudarAno('<')}>\r\n                {'<'}\r\n              </Button>\r\n            </th>\r\n            <th colSpan='5'>{dataState.ano}</th>\r\n            <th>\r\n              <Button color='default' type='btn circle' action={() => mudarAno('>')}>\r\n                {'>'}\r\n              </Button>\r\n            </th>\r\n          </tr>        \r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td colSpan='7' className='btn-meses'>\r\n              {dataInfo.nomesMeses.map((nM, i) => {\r\n                return <Button key={i} color='secondary' type='btn' action={() => [mudarMes(i), mesesAction(false)]}>\r\n                {nM}\r\n              </Button>\r\n              })}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      :      \r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <Button color='default' type='btn circle' action={() => mudarMes('<')}>\r\n                {'<'}\r\n              </Button>\r\n            </th>\r\n            <th colSpan='5'>\r\n              <Button color='default' type='btn circle' action={() => mesesAction(true)}>\r\n                {dataInfo.nomesMeses[dataState.mes] + ' de ' + dataState.ano}\r\n              </Button>\r\n            </th>\r\n            <th>\r\n              <Button color='default' type='btn circle' action={() => mudarMes('>')}>\r\n                {'>'}\r\n              </Button>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            {dataInfo.nomesDias.map((dia, i) => {\r\n              return <td key={`dia-semana-${dia}`}> {dia} </td>\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>{calendarioDias}</tbody>\r\n      </table>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport const CalendarioDias = (dataState, dataAtual,action,value, dataInicio, dataFim, mesNovo) => {\r\n  var data = new Date()\r\n  \r\n  return (<>\r\n    {dataInfo.numeroSemanas.map(s => {\r\n      const semanaDias = () =>\r\n      dataInfo.numeroDiasSemana.map((d) => {\r\n          const diaAtual = dataAtual.getDate()\r\n          const mesAtual = dataAtual.getMonth() //dataState.mes\r\n          dataAtual.setDate(diaAtual + 1)\r\n\r\n          return (\r\n            <td\r\n              key={`dia-${diaAtual}`}\r\n              className={diaAtual === data.getDate() && mesAtual === data.getMonth()? 'dia-atual' : mesAtual === mesNovo ? 'mes-atual' : 'mes-aleatorio'}\r\n            >\r\n              <Button\r\n                color={\r\n                  dataInicio === `${diaAtual}/${mesAtual + 1}/${dataState.ano}` ||\r\n                  dataFim === `${diaAtual}/${mesAtual + 1}/${dataState.ano}` ||\r\n                  value === `${diaAtual}/${mesAtual + 1}/${dataState.ano}`\r\n                    ? 'primary'\r\n                    : 'default'\r\n                }\r\n                type='btn circle'\r\n                action={() => action(`${diaAtual}/${mesAtual + 1}/${dataState.ano}`)}\r\n              >\r\n                {diaAtual}\r\n              </Button>\r\n            </td>\r\n          )\r\n        })\r\n\r\n      return <tr key={`semana-${s}`}>{semanaDias()}</tr>\r\n    })}\r\n  </>)\r\n}"]},"metadata":{},"sourceType":"module"}
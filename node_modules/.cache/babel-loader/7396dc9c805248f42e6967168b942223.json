{"ast":null,"code":"var _jsxFileName = \"/Users/daviribeiro/Desktop/projetos FDTE/projetos/transcender-jitsi/src/components/form/radiobuton/radiobutton.js\";\nimport React from 'react';\nexport function RadioButton({\n  options,\n  action,\n  checked,\n  label,\n  name,\n  type = 'checkbox',\n  color = '',\n  optionLabel = 'name',\n  optionValue = 'id'\n}) {\n  const checkedAction = e => {\n    const resp = e;\n    action({\n      target: {\n        name: name,\n        value: resp,\n        type: type\n      }\n    });\n  };\n\n  const veryfiChecked = e => {\n    return checked[optionValue] === e[optionValue] ? true : false;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-box ${color} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, label && /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `id-${name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, options ? options.map(c => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `${name}-${c[optionValue]}`,\n      className: `radio-box ${veryfiChecked(c) ? 'checked' : ''}`,\n      onClick: () => checkedAction(c),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }), c[optionLabel]);\n  }) : null));\n}","map":{"version":3,"sources":["/Users/daviribeiro/Desktop/projetos FDTE/projetos/transcender-jitsi/src/components/form/radiobuton/radiobutton.js"],"names":["React","RadioButton","options","action","checked","label","name","type","color","optionLabel","optionValue","checkedAction","e","resp","target","value","veryfiChecked","map","c"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,WAAT,CAAqB;AAC1BC,EAAAA,OAD0B;AAE1BC,EAAAA,MAF0B;AAG1BC,EAAAA,OAH0B;AAI1BC,EAAAA,KAJ0B;AAK1BC,EAAAA,IAL0B;AAM1BC,EAAAA,IAAI,GAAG,UANmB;AAO1BC,EAAAA,KAAK,GAAG,EAPkB;AAQ1BC,EAAAA,WAAW,GAAG,MARY;AAS1BC,EAAAA,WAAW,GAAG;AATY,CAArB,EAUJ;AACD,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACzB,UAAMC,IAAI,GAAGD,CAAb;AACAT,IAAAA,MAAM,CAAC;AAAEW,MAAAA,MAAM,EAAE;AAAER,QAAAA,IAAI,EAAEA,IAAR;AAAcS,QAAAA,KAAK,EAAEF,IAArB;AAA2BN,QAAAA,IAAI,EAAEA;AAAjC;AAAV,KAAD,CAAN;AACD,GAHD;;AAKA,QAAMS,aAAa,GAAGJ,CAAC,IAAI;AACzB,WAAOR,OAAO,CAACM,WAAD,CAAP,KAAyBE,CAAC,CAACF,WAAD,CAA1B,GAA0C,IAA1C,GAAiD,KAAxD;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAG,YAAWF,KAAM,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,iBAAI;AAAO,IAAA,OAAO,EAAG,MAAKC,IAAK,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,KAA/B,CADZ,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,GACJA,OAAO,CAACe,GAAR,CAAYC,CAAC,IAAI;AACf,wBACE;AACE,MAAA,GAAG,EAAG,GAAEZ,IAAK,IAAGY,CAAC,CAACR,WAAD,CAAc,EADjC;AAEE,MAAA,SAAS,EAAG,aAAYM,aAAa,CAACE,CAAD,CAAb,GAAmB,SAAnB,GAA+B,EAAG,EAF5D;AAGE,MAAA,OAAO,EAAE,MAAMP,aAAa,CAACO,CAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAM,MAAA,SAAS,EAAEX,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMGW,CAAC,CAACT,WAAD,CANJ,CADF;AAUD,GAXD,CADI,GAaJ,IAdN,CAFF,CADF;AAqBD","sourcesContent":["import React from 'react'\r\n\r\nexport function RadioButton({\r\n  options,\r\n  action,\r\n  checked,\r\n  label,\r\n  name,\r\n  type = 'checkbox',\r\n  color = '',\r\n  optionLabel = 'name',\r\n  optionValue = 'id'\r\n}) {\r\n  const checkedAction = e => {\r\n    const resp = e\r\n    action({ target: { name: name, value: resp, type: type } })\r\n  }\r\n\r\n  const veryfiChecked = e => {\r\n    return checked[optionValue] === e[optionValue] ? true : false\r\n  }\r\n\r\n  return (\r\n    <div className={`form-box ${color} `}>\r\n      {label && <label htmlFor={`id-${name}`}>{label}</label>}\r\n      <div>\r\n        {options\r\n          ? options.map(c => {\r\n              return (\r\n                <div\r\n                  key={`${name}-${c[optionValue]}`}\r\n                  className={`radio-box ${veryfiChecked(c) ? 'checked' : ''}`}\r\n                  onClick={() => checkedAction(c)}\r\n                >\r\n                  <span className={type}></span>\r\n                  {c[optionLabel]}\r\n                </div>\r\n              )\r\n            })\r\n          : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
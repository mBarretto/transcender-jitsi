{"ast":null,"code":"export const getWidthForSeats = seats => {\n  const fullWIdth = Math.min(window.innerHeight - 45, window.innerWidth);\n\n  switch (seats) {\n    case 0:\n      return 0;\n\n    case 1:\n      return fullWIdth;\n\n    case 2:\n      return fullWIdth / 2;\n\n    case 3:\n      return fullWIdth / (1 + 2 / Math.sqrt(3));\n\n    case 4:\n      return fullWIdth / (1 + Math.sqrt(2));\n\n    case 5:\n      return fullWIdth / (1 + Math.sqrt(2 * (1 + 1 / Math.sqrt(5))));\n\n    case 6:\n      return fullWIdth / 3;\n\n    case 7:\n      return fullWIdth / 4;\n\n    default:\n      return fullWIdth / 4;\n  }\n};\nexport const getDistanceRatioForSeats = seats => {\n  if (seats < 2) return 0;\n  const width = getWidthForSeats(seats);\n  const fullWIdth = Math.min(window.innerHeight - 45, window.innerWidth);\n  return 50 - width / 2 / fullWIdth * 100;\n};\nexport const posicaoAssento = (index, length, assento) => {\n  let lengthAssento = length + 2;\n\n  if (length > 4) {\n    //length <= 10) {\n    lengthAssento = length + 1;\n  }\n\n  let seatSize = getWidthForSeats(lengthAssento);\n\n  if (assento === 'memorial') {\n    let lengthMemorial = lengthAssento;\n\n    if (length > 5 && length < 8) {\n      lengthMemorial = 3;\n    } else if (length >= 8) {\n      lengthMemorial = 5;\n    }\n\n    seatSize = getWidthForSeats(lengthMemorial);\n  }\n\n  const disanceRatio = getDistanceRatioForSeats(lengthAssento);\n  const angle = 360 / lengthAssento * index;\n  const horizontal = Math.cos(angle * 2 * Math.PI / 360) * disanceRatio;\n  const vertical = Math.sin(angle * 2 * Math.PI / 360) * disanceRatio;\n\n  if (assento === 'memorial' && length > 4) {\n    return {\n      width: seatSize - 20,\n      height: seatSize - 20,\n      top: `calc(50% - ${seatSize + 50}px/2)`,\n      left: `calc(50% - ${seatSize}px/2)` // top: `calc(50% - ${seatSize + 10}px/2  + ${vertical}%)`, \n      // left: `calc(50% - ${seatSize}px/2 + ${horizontal}%)`,\n\n    };\n  }\n\n  return {\n    width: seatSize - 20,\n    height: seatSize - 20,\n    top: `calc(50% - ${seatSize + 10}px/2  + ${vertical}%)`,\n    left: `calc(50% - ${seatSize}px/2 + ${horizontal}%)`\n  };\n};\n\nconst PA = (index, length, assento) => {\n  let lengthAssento = length + 2;\n\n  switch (lengthAssento) {\n    case 2:\n      return {\n        index\n      };\n\n    default:\n      return;\n  }\n};\n\nexport const posicaoAssentoo = (index, length, assento) => {\n  let lengthAssento = length + 2;\n\n  switch (lengthAssento) {\n    case 2:\n      return PA(index);\n\n    default:\n      return;\n  }\n};","map":{"version":3,"sources":["/Users/daviribeiro/Desktop/projetos FDTE/projetos/transcender-jitsi/src/utils.js"],"names":["getWidthForSeats","seats","fullWIdth","Math","min","window","innerHeight","innerWidth","sqrt","getDistanceRatioForSeats","width","posicaoAssento","index","length","assento","lengthAssento","seatSize","lengthMemorial","disanceRatio","angle","horizontal","cos","PI","vertical","sin","height","top","left","PA","posicaoAssentoo"],"mappings":"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","sourcesContent":["export const getWidthForSeats = seats => {\r\n  const fullWIdth = Math.min(window.innerHeight - 45, window.innerWidth);\r\n  switch (seats) {\r\n    case 0: return 0;\r\n    case 1: return fullWIdth;\r\n    case 2: return fullWIdth / 2;\r\n    case 3: return fullWIdth / (1 + 2 / Math.sqrt(3));\r\n    case 4: return fullWIdth / (1 + Math.sqrt(2));\r\n    case 5: return fullWIdth / (1 + Math.sqrt(2 * (1 + 1 / Math.sqrt(5))));\r\n    case 6: return fullWIdth / 3;\r\n    case 7: return fullWIdth / 4;\r\n    default: return fullWIdth / 4;\r\n  }\r\n};\r\nexport const getDistanceRatioForSeats = seats => {\r\n  if (seats < 2)\r\n    return 0;\r\n  const width = getWidthForSeats(seats);\r\n  const fullWIdth = Math.min(window.innerHeight - 45, window.innerWidth);\r\n  return 50 - width / 2 / fullWIdth * 100;\r\n};\r\n\r\n\r\n\r\nexport const posicaoAssento = (index, length, assento) => {\r\n  let lengthAssento = length + 2\r\n\r\n  if (length > 4 ){ //length <= 10) {\r\n    lengthAssento = length + 1\r\n  }\r\n\r\n  let seatSize = getWidthForSeats(lengthAssento);\r\n\r\n  if (assento === 'memorial') {\r\n    let lengthMemorial = lengthAssento\r\n    if (length > 5 && length < 8) {\r\n      lengthMemorial = 3\r\n    } else if (length >= 8) {\r\n      lengthMemorial = 5\r\n    }\r\n    seatSize = getWidthForSeats(lengthMemorial);\r\n  }\r\n\r\n  const disanceRatio = getDistanceRatioForSeats(lengthAssento );\r\n  const angle = (360 / lengthAssento) * index;\r\n  const horizontal = Math.cos(angle * 2 * Math.PI / 360) * disanceRatio;\r\n  const vertical = Math.sin(angle * 2 * Math.PI / 360) * disanceRatio;\r\n\r\n  \r\n  if (assento === 'memorial' && length > 4) {\r\n    return { \r\n      width: seatSize - 20, \r\n      height: seatSize - 20, \r\n      top: `calc(50% - ${seatSize + 50}px/2)`,\r\n      left: `calc(50% - ${seatSize}px/2)`\r\n      // top: `calc(50% - ${seatSize + 10}px/2  + ${vertical}%)`, \r\n      // left: `calc(50% - ${seatSize}px/2 + ${horizontal}%)`,\r\n    }\r\n  }\r\n  return { \r\n    width: seatSize - 20, \r\n    height: seatSize - 20, \r\n    top: `calc(50% - ${seatSize + 10}px/2  + ${vertical}%)`, \r\n    left: `calc(50% - ${seatSize}px/2 + ${horizontal}%)`,\r\n  }\r\n};\r\n\r\n\r\nconst PA = (index, length, assento) => {\r\n  let lengthAssento = length + 2\r\n\r\n  switch (lengthAssento) {\r\n    case 2: return {\r\n      index\r\n    };\r\n    default: return ;\r\n  }\r\n};\r\n\r\nexport const posicaoAssentoo = (index, length, assento) => {\r\n  let lengthAssento = length + 2\r\n\r\n  switch (lengthAssento) {\r\n    case 2: return PA(index);\r\n    default: return ;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}